# running tests twice, so if something breaks when optional dependencies are
# missing, it still shows up. (full coverage would mean running each
# combination, but let's not blow the test matrix out of proportion).
test:3.7:
  image: "python:3.7"
  script:
    - env
    - echo Using cache:; ls .eggs/ || echo No cached .eggs found
    - rm -f .coverage* collected-coverage/3.7/
    - pip3 install coverage
    - AIOCOAP_TEST_EXTRAS= python3 -m coverage run --parallel ./setup.py test
    # this should be done locally by setup.py, but while pip installation
    # works, inside setup.py in doesn't -- still looking for all the details
    # for a bug report.
    - "pip3 install 'DTLSSocket>=0.1.11a1'"
    - python3 -m coverage run --parallel ./setup.py test
    - pip3 install uvloop
    - AIOCOAP_TESTS_LOOP=uvloop python3 -m coverage run --parallel ./setup.py test
    # Could just as well do this on the default main loop, but AFAIR uvloop
    # required occasional workarounds
    - AIOCOAP_TESTS_LOOP=uvloop AIOCOAP_CLIENT_TRANSPORT=oscore:simple6 AIOCOAP_SERVER_TRANSPORT=oscore:simplesocketserver python3 -m coverage run --parallel ./setup.py test
    # Not installing python3-gi directly, as Debian's dist-modules is not in
    # docker image's Python path
    - apt-get update
    - apt-get -y install libgirepository1.0-dev
    - pip3 install pygobject gbulb
    - AIOCOAP_TESTS_LOOP=gbulb python3 -m coverage run --parallel ./setup.py test || echo Letting failing gbulb test slide
    - python3 -m coverage combine
    - python3 -m coverage report --include=aiocoap/\*
    - mkdir collected-coverage/3.7/ -p
    - mv .coverage* collected-coverage/3.7/
    - "AIOCOAP_TEST_MCIF=\"$(ip -j -6 route list default | python3 -c 'import sys, json; print(json.load(sys.stdin)[0][\"dev\"])')\" ./setup.py test"
  artifacts:
    paths:
      - collected-coverage
  cache:
    key: python3.7
    paths:
      - .eggs/

test:pypy:
  image: debian:buster
  script:
    - apt-get update
    - apt-get -y install pypy3 python3-setuptools python3-pip
    # The dependencies for the extras fail to install on this installation of
    # pypy; tox tests them anyway though.
    - AIOCOAP_TEST_EXTRAS= pypy3 ./setup.py test

test:tox:
  image: debian:bullseye
  script:
    - apt-get update
    - apt-get -y install tox build-essential python3-dev libssl-dev autoconf pypy3 pypy3-dev python3-setuptools python3-pip
    # The 'cryptography` package, somewhere around its pep517 dependency, only
    # manages to set itself up on the second run
    - tox --notest || true
    - tox --notest
    - tox

pages:
  image: "debian"
  stage: deploy
  dependencies:
    - test:3.7
    - test:pypy
    - test:tox
  script:
    - pip3 install coverage
    - rm -f .coverage* public
    - mv collected-coverage/*/.coverage* .
    - python3 -m coverage html --include=aiocoap/\*
    - mv htmlcov public
  artifacts:
    paths:
      - public

include:
  - template: SAST.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml
