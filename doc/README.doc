per-module documentation hack
=============================

in order to have auto-buildable documentation with sphinx (using `./setup.py
build_sphinx`), you must first run

    for x in $(find aiocoap -name '*.py' | sed -e 's@.py$@@' -e 's@/__init__$@@' -e 's@/@.@g')
    do
        rm doc/$x.rst
        echo "$x module\n=========================================\n\n.. automodule:: $x" > doc/$x.rst
        if [[ $x != "aiocoap.numbers" ]]
        then
           echo "    :members:\n    :undoc-members:\n    :show-inheritance:" >> doc/$x.rst
        else
           echo ".. toctree::\n    :glob:\n\n    aiocoap.numbers.*\n" >> doc/$x.rst
        fi
    done

(sphinx-apidoc is less customizable and does not seem to do more).

for readthedocs to work, a branch `for-readthedocs` has been generated that
contains those files statically checked in.

index hack
==========

in order to have a readme that is usable for simple ReST builders like github,
the readme now contains hardwired links to readthedocs or local files.
sphinx (and thus readthedocs) sees, via the aiocoap_index.py sphinx extension,
a preprocessed version where all the static links to readthedocs are replaced
with sphinx-internal directives and properly resolved in the locally built
docs.
